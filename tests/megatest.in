writeln("--- MEGA TESTE ---");
writeln("---------\\----------");

string head<-"----";

writeln("---------\\----------");
writeln("Testes de operacoes negativas:");
writeln("---------\\----------");

int a_opneg<--20;
int b_opneg<--10;
float c_opneg<--50.0;
int d_opneg<--50;
float e_opneg<--20.0;
float f_opneg<-100;
float h_opneg<-0.5;

write("2*(-1) = "); 
writeln(2*(-1));

write("2 div (-1) = "); 
writeln(2 div (-1));

write("-50.0-(-20) = ",c_opneg, " - ", a_opneg, " = ");
writeln(c_opneg-a_opneg);

write("-50.0 > -20?"); 
if(c_opneg>a_opneg) writeln(" True");
else writeln(" False");

write("-20 > -50?"); 
if(a_opneg>d_opneg) writeln(" True");
else writeln(" False");

write("-50.0 > -20.0?"); 
if(c_opneg>e_opneg) writeln(" True");
else writeln(" False");

write("-50.0 - (-20) = "); 
writeln(c_opneg-a_opneg);

write("-50.0 + (-20) = "); 
writeln(c_opneg+a_opneg);

write("-50.0 - (-20.0) = "); 
writeln(c_opneg-e_opneg);

write("-50.0 + (-20.0) = "); 
writeln(c_opneg+e_opneg);

write("-50 - (-20) = "); 
writeln(d_opneg-a_opneg);

write("-50 + (-20) = "); 
writeln(d_opneg+a_opneg);

write("100.0+(-50.0) = "); 
writeln(f_opneg+c_opneg);

write("100.0-(-50.0) = "); 
writeln(f_opneg-c_opneg);

write("-50.0+100.0 = ");
writeln(c_opneg+f_opneg);

write("100.0 - 0.5 = ");
writeln(f_opneg-h_opneg);

write("-20 div -10 = ");
writeln(a_opneg div b_opneg);

write("-20 div -10 * -50.0 * 4 = ");
writeln(a_opneg div b_opneg*c_opneg*4);

write("(-20 div -10 * -50.0 * 4)/(2*-1) = ");
writeln((a_opneg div b_opneg*c_opneg*4)/(2*(-1)));

writeln("---------\\----------");
writeln("Outros testes de operacao:");
writeln("---------\\----------");
writeln("2+3+4.5 = ", (2+3+4.5));
writeln("2.0+3+4.5 = ", (2.0+3+4.5));
writeln("2/4 = ", (2/4));
writeln("2*4 = ", (2*4));
writeln("2.0*4 = ", (2.0*4));
writeln("-50.0/(-25.0) = ", -50.0/(-25.0));
writeln("(-50+50.2544-4.0/(2) * (-1)) = ", (-50+50.2544-4.0/(2))/(-1));

writeln("---------\\----------");
writeln("Testes de atribuicoes de string:");
writeln("---------\\----------");

string a_stratrb<-"matheus";
string b_stratrb<-"bernardo";
string c_stratrb<-"menor";

writeln(head);
a_stratrb<-b_stratrb;
write("matheus<-bernardo = ");
writeln(a_stratrb);

writeln(head);
a_stratrb<-c_stratrb;
write("matheus<-menor = ");
writeln(a_stratrb);

writeln(head);
c_stratrb<-"d";
write("menor<-d(str) = ");
writeln(c_stratrb);

writeln(head);
write("menor[0] = d?");
if (c_stratrb[0]='d') writeln(" True.");
else writeln(" False.");

writeln(head);
write("ber{n}ardo<-'m' = ");
b_stratrb[3]<-'m';
writeln(b_stratrb);

char a_atrb<-'a';
string b_atrb<-"vitamina";
string c_atrb<-"ccccccc";
string d_atrb<-"omega";
char e_atrb<-'b';
float f_atrb<-2.0;
int h_atrb<-2;
char i_atrb<-'2';

writeln(head);
writeln("'a' > 'b'?");
if(a_atrb>e_atrb) writeln("True.");
else writeln("False.");

writeln(head);
writeln("a = omeg{a}?");
if(a_atrb=d_atrb[4]) writeln("True.");
else writeln("False.");

writeln(head);
write("vi{t}amina<-'a' = " );
b_atrb[2]<-a_atrb;
writeln(b_atrb);

writeln(head);
d_atrb<-"testeatrib";
write("d_atrb<-testeatrib = ");
writeln(d_atrb);

writeln("---------\\----------");
writeln("Testes de comparacao de strings.");
writeln("---------\\----------");
string a_compstr<-"banana";
string b_compstr<-"banana";
string c_compstr<-"banan";
string d_compstr<-"0000";
string e_compstr<-"0000a";
string f_compstr<-"0000";
string g_compstr<-"BANANA";
string h_compstr<-"ab0ef";
string j_compstr<-"ab0ef";

writeln("renato = renatod");
if("renato"="renatod") writeln("Strings iguais");
else writeln("Strings diferentes.");

writeln(head);
writeln("banana = banan");
if(a_compstr=c_compstr) writeln("Strings iguais.");
else writeln("Strings diferentes");

writeln(head);
writeln("banana = banana");
if(a_compstr=b_compstr) writeln("Strings iguais.");
else writeln("Strings diferentes");

writeln(head);
writeln("banan = banana");
if(c_compstr=b_compstr) writeln("Strings iguais.");
else writeln("Strings diferentes");

writeln(head);
writeln("banana = banana - ordem inversa");
if(b_compstr=a_compstr) writeln("Strings iguais.");
else writeln("Strings diferentes");

writeln(head);
writeln("0000 = 0000");
if(d_compstr=f_compstr) writeln("Strings iguais.");
else writeln("Strings diferentes");

writeln(head);
writeln("0000 = 0000a");
if(d_compstr=e_compstr) writeln("Strings iguais.");
else writeln("Strings diferentes");

writeln(head);
writeln("BANANA = banana");
if(a_compstr=g_compstr) writeln("Strings iguais.");
else writeln("Strings diferentes");

writeln(head);
writeln("ab0ef = ab0ef");
if(h_compstr=j_compstr) writeln("Strings iguais.");
else writeln("Strings diferentes");

writeln("---------\\----------");
writeln("Conversao maldita:");
writeln("---------\\----------");


float a;
a <- int(float(float(int(int(float(int(2.5)))))));
writeln("a <- int(float(float(int(int(float(int(2.5))))))) = ", a);

/*writeln("Testes de mod:");
writeln("---------\\----------");*/

int a_md<-2;
int b_md<-4;
int c_md<-7;
int d_md<--10;

a_md<-2 mod 2;
write("2 mod 2 = ");
if(a_md=0) writeln(a_md, ", Par.");
else writeln(" Impar");

d_md<-d_md mod b_md;
write("-10 mod 4 = ");
writeln(d_md);

d_md<-10 mod (-4);
write("10 mod -4 = ");
writeln(d_md);

d_md<--10 mod (-4);
write("-10 mod -4 = ");
writeln(d_md);

c_md<-7 mod 2;
write("7 mod 2 = ");
if(c_md=0) writeln(c_md, " Par.");
else writeln(c_md, " Impar");

int n_wh<-0;
int m_wh<-100;

writeln(head);
writeln("Imprimindo todos os pares de 0 a 100:");
while(m_wh>n_wh){
    if((n_wh mod 2)=0) write(n_wh, ", ");
    n_wh<-n_wh+1;
}

writeln("---------\\----------");
writeln("Teste de comparacao de strings com read:");
writeln("---------\\----------");


string test_b, b_testing<- "BERNARDO";
string test_c, c_testing<- "compiladoress";
string test_d, d_testing<- "amaNHECER";

float test_f, f_testing<-10.111;
float g_testing<- -.111, test_g;


writeln("Digite BERNARDO:");
readln(test_b);
if(test_b=b_testing) writeln("Iguais!");
else writeln("Diferentes!");

writeln("Digite compiladoress:");
readln(test_c);
if(test_c=c_testing) writeln("Iguais!");
else writeln("Diferentes!");

writeln("Digite amaNHECER");
readln(test_d);
if(test_d=d_testing) writeln("Iguais!");
else writeln("Diferentes!");

writeln("Digite um numero menor ou igual a 10.111: ");
readln(test_f);
if(test_f<=f_testing) writeln("Menor ou igual!");
else writeln ("Maior!");

writeln("Digite um numero maior que -0.111: ");
readln(test_g);
if(test_g>g_testing) writeln("Maior!");
else writeln ("Menor ou igual!");



writeln("---------\\----------");
writeln("Teste de atribuicao multipla e loop:");
writeln("---------\\----------");

string a_mta <- "aaaa", b_mta, c_mta <- "aaaa";
writeln("string a_mta <- aaaa, b_mta, c_mta <- aaaa");
writeln("a_mta, b_mta e c_mta: ", a_mta, ", ", b_mta, " e ",c_mta);

int n_mta<-4;
const loop = 0;
writeln("b_mta<-aaaa");
b_mta<-"aaaa";

writeln("while (n_mta>0) n_mta-- com n_mta = 4, imprime a_mta quando n_mta par, muda b_mta e imprime quando n_mta impar, muda c_mta pra uau e imprime.");
while(n_mta>loop){
    if (n_mta mod 2 = 0) writeln(a_mta[n_mta]);
    if (!(n_mta mod 2 = 0)) {
        b_mta[n_mta]<-'b';
        writeln(b_mta[n_mta]);
    }    
    c_mta <- "uau";
    writeln(c_mta);
    n_mta<-n_mta-1;
}

writeln("a_mta, b_mta e c_mta: ", a_mta, ", ", b_mta, " e ",c_mta);

writeln("---------\\----------");
writeln("Entrada do pub.in:");
writeln("---------\\----------");

int n_pub<-1;
string nome;
const MAXITER=10;

writeln("Digite seu nome: ");
readln(nome);

float percentual;
while n_pub<=MAXITER {
  percentual<-float(n_pub)/MAXITER;
  writeln(float(n_pub),": Ola' ",nome);
  n_pub<-n_pub+1;
}

writeln("---------\\----------");
writeln("While tests:");
writeln("---------\\----------");

const LOOP = 15;
const word = "compiladores";
int n<-0;

writeln("Imprimir compiladores char por char:");
while(n<=LOOP){
    writeln(word[n]);
    n<-n+1;
}

writeln(head);
string str;
writeln("Digite uma palavra, ate 15 chars: ");
readln(str);

n<-0;
const n2=1;
int PASSADA<-0;

while(PASSADA<=n2){
    if (PASSADA=0){
        writeln("Vogais:");
    }
    else {
        writeln("Consoantes: ");
    }
    while(n<=LOOP){
        if(((str[n]='a')||(str[n]='e')||(str[n]='i')||(str[n]='o')||(str[n]='u'))){
            if(PASSADA=0) writeln("V: ", str[n]);
        } else{
            if((PASSADA = 1)) writeln("C: ", str[n]);
        }
        n<-n+1;
    }
    PASSADA<-PASSADA+1;
    n<-0;
}

writeln(head);
n<-0;
string string_doida;
writeln("Digite abcdef: ");
readln(string_doida);
float contador <- 0;

writeln("Write doidao: ");
while(n<=5){
    if((string_doida[0] = 'a') && (n=0)){
        writeln("'a' detectado!");
        contador <- contador+1;
    } else if ((string_doida[1] = 'b') && (n=1)){
        writeln("'b' detectado!");
        contador <- contador+1;
    } else if ((string_doida[2] = 'c') && (n=2)){
        writeln("'c' detectado!");
        contador <- contador+1;
    } else if ((string_doida[3] = 'd') && (n=3)){
        writeln("'d' detectado!");
        contador <- contador+1;
    } else if ((string_doida[4] = 'e') && (n=4)){
        writeln("'e' detectado!");
        contador <- contador+1;
    } else if ((string_doida[5] = 'f') && (n=5)){
        writeln("'f' detectado!");
        contador <- contador+1;
    } else{
        writeln("Opa! Digitou errado!");
    }
    n<-n+1;
}



writeln("Voce digitou ",contador, " caracteres iguais.");

writeln("---------\\----------");
writeln("Comparacao de char:");
writeln("---------\\----------");

char b_charcomp;
char c_charcomp;

writeln("Digite char 1:");
readln(b_charcomp);
writeln("Digite o char 2:");
readln(c_charcomp);

if((b_charcomp=c_charcomp)) writeln("Iguais");
else if(c_charcomp!=b_charcomp){ 
    writeln("Diferentes");
    if(b_charcomp>c_charcomp) writeln("1 maior que 2");
    else if(b_charcomp<c_charcomp) writeln("1 menor que 2");
}

writeln("---------\\----------");
writeln("Bateria de operacoes, atribuicoes e conversoes:");
writeln("---------\\----------");


int x1;
x1<-4;
writeln("int x1 recebeu 4, int x1 = ", x1);

writeln(head);
writeln("Digite um valor novo pra x1: ");
readln(x1);

writeln(head);
writeln("x1 * -100 = ", (x1*(-100)));
writeln("x1 * -100 + 4 = ", (x1*(-100) + 4));
writeln("x1 * -100 + 4/1 = ", (x1*(-100) + 4/1));
writeln("(x1 elevado x1 4) div 1000 + 0.0 = ", ((((x1*x1*x1*x1)/(1000))+0.0)));

float x2;
writeln(head);
writeln("Digite um x2, que sera float: ");
readln(x2);

writeln(head);
writeln("x1-x2 = ", x1-x2);
writeln("x2/x1 = ", x2/x1);
writeln("x2 + 1.01*x1*94 = ", x2 + 1.01*x1*94);

writeln(head);
writeln("x2<-x2*(-1/-1)*(-x2)");
x2<-x2*(-1/(-1))*(-x2);
writeln("novo valor de x2 = ", x2);
writeln("x2<-x2*x1*(-.20)");
x2<-x2*x1*(-.20);
writeln("novo valor de x2 = ", x2);

writeln(head);
writeln("Digite um valor de x3, que sera int: ");
int x3;
readln(x3);
writeln("int(x2) mod int(float(x3)) = ", int(x2), " mod ", int(float(x3)), " = ", int(x2) mod int(float(x3)));
writeln("int(x2) mod int(float(x3)) div x1 = ", int(x2), " mod ", int(float(x3)), " div ", x1, " = ", int(x2) mod int(float(x3)) div x1);
writeln("float(x3) + float(x1) - float(x2) = ", float(x3), " + ", float(x1), " - ", int(x2), " = ", float(x3) + float(x1) - int(x2));
writeln("int(float(x3) + float(x1) - float(x2)) div 2 = ", "int(" , float(x3) , " + " , float(x1) , " - " , float(x2) , ") mod 2 = ", int(float(x3) + float(x1) - float(x2)), " mod 2 = ", int(float(x3) + float(x1) - float(x2)) mod 2);
if((int(float(x3) + float(x1) - float(x2)) mod 2) = 0) writeln("Numero par!");
else writeln("Numero impar!");












